package speech2text;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.URI;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.concurrent.ExecutionException;

import com.google.api.gax.longrunning.OperationFuture;
import com.google.cloud.speech.v1p1beta1.LongRunningRecognizeMetadata;
import com.google.cloud.speech.v1p1beta1.LongRunningRecognizeResponse;
import com.google.cloud.speech.v1p1beta1.RecognitionAudio;
import com.google.cloud.speech.v1p1beta1.RecognitionConfig;
import com.google.cloud.speech.v1p1beta1.RecognitionConfig.AudioEncoding;
import com.google.cloud.speech.v1p1beta1.RecognizeResponse;
import com.google.cloud.speech.v1p1beta1.SpeechClient;
import com.google.cloud.speech.v1p1beta1.SpeechContext;
import com.google.cloud.speech.v1p1beta1.SpeechRecognitionAlternative;
import com.google.cloud.speech.v1p1beta1.SpeechRecognitionResult;
import com.google.protobuf.ByteString;

import com.google.cloud.storage.Acl;
import com.google.cloud.storage.Blob;
import com.google.cloud.storage.BlobId;
import com.google.cloud.storage.BlobInfo;
import com.google.cloud.storage.Storage;
import com.google.cloud.storage.StorageOptions;

/**
 * Hello world!
 *
 */
public class App {
	public static void main(String[] args) throws IOException, InterruptedException, ExecutionException {

		uploadFileGoogleStorage("C:\\Users\\vaibhav\\Downloads\\ringcntral\\CallLog_20181020-180719\\1.mp3",
				"1.mp3");

		String gcsUri = "gs://istar-cloud-bucket/audio/1.mp3";


		try (SpeechClient speech = SpeechClient.create()) {
			// Configure request with video media type
			SpeechContext ctx = SpeechContext.newBuilder().addPhrases("Talentify").build();
			
			RecognitionConfig recConfig = RecognitionConfig.newBuilder()
					.setEncoding(AudioEncoding.UNRECOGNIZED).setDiarizationSpeakerCount(2)
					.setLanguageCode("en-US")
					.setSampleRateHertz(8000)
					.setModel("phone_call").setUseEnhanced(true)
					.setEnableAutomaticPunctuation(true)
					.addSpeechContexts(0, ctx).setMaxAlternatives(1)
					.setAudioChannelCount(2).setEnableSeparateRecognitionPerChannel(true).build();
		
			RecognitionAudio audio = RecognitionAudio.newBuilder().setUri(gcsUri).build();

			OperationFuture<LongRunningRecognizeResponse, LongRunningRecognizeMetadata> response = speech
					.longRunningRecognizeAsync(recConfig, audio);

			while (!response.isDone()) {
				System.out.println("Waiting for response...");
				Thread.sleep(10000);
			}
			// Just print the first result here.
			for (SpeechRecognitionResult result : response.get().getResultsList()) {

				// There can be several alternative transcripts for a given chunk of speech.
				// Just use the
				// first (most likely) one here.
				int i =0;
				for (SpeechRecognitionAlternative alternative :  result.getAlternativesList()) {
					System.out.printf(i+"Transcript : %s\n", alternative.getTranscript());
					System.out.printf(i+"Channel Tag : %s\n\n", result.getChannelTag());
					i++;
				}
				
				//SpeechRecognitionAlternative alternative = result.getAlternativesList().get(0);

				// Print out the result
			
			}
		}
	}

	

	public static String uploadFileGoogleStorage(String filePath, String fileName) {
		Storage storage = StorageOptions.getDefaultInstance().getService();
		String bucketName = "istar-cloud-bucket";
		String folderName = "audio/";
		File file = new File(filePath);
		FileInputStream is = null;
		try {
			is = new FileInputStream(file);
		} catch (FileNotFoundException e) {
			e.printStackTrace();

		}
		BlobId blobId = BlobId.of(bucketName, folderName + fileName);
		BlobInfo blobInfo = BlobInfo.newBuilder(blobId).setContentType("application/octet-stream").build();
		Blob blob = storage.create(blobInfo, is);
		Acl acl = storage.createAcl(blobId, Acl.of(Acl.User.ofAllUsers(), Acl.Role.READER));
		return blob.getMediaLink();
	}
}